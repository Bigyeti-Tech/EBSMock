{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/header/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","company","name","address","street","city","geo","lat","lng","CardList","className","style","borderBottom","monsters","map","id","Header","handleChange","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61437503.chunk.js","sourcesContent":["import React from 'react';\r\n//import './card.css'\r\n\r\nexport const Card = (props) => (\r\n\r\n    <tr>\r\n        <td>\r\n            <p><strong>{props.monster.company.name}</strong></p>\r\n        </td>\r\n        <td>\r\n            <p>{props.monster.address.street}</p>\r\n        </td>\r\n        <td>\r\n            <p>{props.monster.address.city}</p>\r\n        </td>\r\n        <td>\r\n            <p>Lat:{props.monster.address.geo.lat} / Long:{props.monster.address.geo.lng}</p>\r\n        </td>\r\n    </tr>\r\n\r\n)","import React from 'react';\r\nimport { Card } from '../card/card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        <table>\r\n            <thead style={{ borderBottom: \"1px black solid\" }}>\r\n                <tr>\r\n                    <th><h4>Company Name</h4></th>\r\n                    <th><h4>Address</h4></th>\r\n                    <th><h4>City</h4></th>\r\n                    <th><h4>Location</h4></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster} />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n);","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\n\r\n\r\nexport const Header = ({ handleChange }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n                        <Navbar.Brand href=\"#home\">React Bootstrap Navbar</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                                <Nav.Link href=\"/about-us\">Contact Us</Nav.Link>\r\n                                <Nav.Link href=\"/contact-us\">About Us</Nav.Link>\r\n                                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                            <Form inline>\r\n                                <FormControl\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleChange}\r\n                                    className=\"mr-sm-2\" />\r\n                                {/*<Button variant=\"outline-success\">Search</Button>*/}\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { Header } from './components/header/header';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.company.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <Header handleChange={e => {\n          this.setState({ searchField: e.target.value });\n        }} />\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}